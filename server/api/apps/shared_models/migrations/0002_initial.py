# Generated by Django 4.0.6 on 2022-11-09 06:19

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("shared_models", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="userstatistics",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="topicstatistics",
            name="topic",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="shared_models.topic",
            ),
        ),
        migrations.AddField(
            model_name="topic",
            name="subject",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="shared_models.subject",
            ),
        ),
        migrations.AddField(
            model_name="quizstatistics",
            name="subject",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="shared_models.subject",
            ),
        ),
        migrations.AddField(
            model_name="quizstatistics",
            name="topics",
            field=models.ManyToManyField(blank=True, to="shared_models.topic"),
        ),
        migrations.AddField(
            model_name="quizstatistics",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="questionstatistics",
            name="question",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="shared_models.question",
            ),
        ),
        migrations.AddField(
            model_name="questionresponse",
            name="question",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="shared_models.question",
            ),
        ),
        migrations.AddField(
            model_name="questionresponse",
            name="selected_answer",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="shared_models.answer",
            ),
        ),
        migrations.AddField(
            model_name="questionresponse",
            name="user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="question",
            name="creator",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="question",
            name="subject",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="shared_models.subject",
            ),
        ),
        migrations.AddField(
            model_name="question",
            name="topics",
            field=models.ManyToManyField(blank=True, to="shared_models.topic"),
        ),
        migrations.AddField(
            model_name="answer",
            name="question",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="shared_models.question",
            ),
        ),
        migrations.AddConstraint(
            model_name="quizstatistics",
            constraint=models.CheckConstraint(
                check=models.Q(("score__gte", 0.0), ("score__lte", 100.0)),
                name="QuizStatistics_score_range",
            ),
        ),
    ]
